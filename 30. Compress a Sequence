;; Write a function which removes consecutive duplicates from a sequence.
;; "dedupe" NOT allowed!


(= (apply str (__ "Leeeeeerrroyyy")) "Leroy")
(= (__ [1 1 2 3 3 2 2 3]) '(1 2 3 2 3))
(= (__ [[1 2] [1 2] [3 4] [1 2]]) '([1 2] [3 4] [1 2]))

;; Answer
(fn  [coll] (let [vcol (conj (vec coll) -1)] (mapcat #(if (not= %1 %2)  (list %1)) vcol (next vcol))))

(defn mydedupe
  [coll]
  (let [vcol (conj (vec coll) -1)]
  (mapcat #(if (not= %1 %2)
            (list %1)) vcol (next vcol))))
